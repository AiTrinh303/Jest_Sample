{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport useSWR from 'swr';\nasync function repositoriesFetcher([url, searchQuery]) {\n  const res = await axios.get(url, {\n    params: {\n      q: searchQuery || '',\n      per_page: 10\n    }\n  });\n  return res.data.items;\n}\nexport default function useRepositories(searchQuery) {\n  _s();\n  const {\n    data,\n    error,\n    isLoading\n  } = useSWR(searchQuery && ['/api/repositories', searchQuery], repositoriesFetcher);\n  return {\n    data,\n    isLoading,\n    error\n  };\n}\n_s(useRepositories, \"3etLDUffADz62tD7g9gJKxYxEy4=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"names":["axios","useSWR","repositoriesFetcher","url","searchQuery","res","get","params","q","per_page","data","items","useRepositories","_s","error","isLoading"],"sources":["/home/dci-student/Desktop/Jest_Sample/codesplain/src/hooks/useRepositories.js"],"sourcesContent":["import axios from 'axios';\nimport useSWR from 'swr';\n\nasync function repositoriesFetcher([url, searchQuery]) {\n  const res = await axios.get(url, {\n    params: {\n      q: searchQuery || '',\n      per_page: 10,\n    },\n  });\n\n  return res.data.items;\n}\n\nexport default function useRepositories(searchQuery) {\n  const { data, error, isLoading } = useSWR(\n    searchQuery && ['/api/repositories', searchQuery],\n    repositoriesFetcher\n  );\n\n  return {\n    data,\n    isLoading,\n    error,\n  };\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,KAAK;AAExB,eAAeC,mBAAmBA,CAAC,CAACC,GAAG,EAAEC,WAAW,CAAC,EAAE;EACrD,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAG,CAACH,GAAG,EAAE;IAC/BI,MAAM,EAAE;MACNC,CAAC,EAAEJ,WAAW,IAAI,EAAE;MACpBK,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC;EAEF,OAAOJ,GAAG,CAACK,IAAI,CAACC,KAAK;AACvB;AAEA,eAAe,SAASC,eAAeA,CAACR,WAAW,EAAE;EAAAS,EAAA;EACnD,MAAM;IAAEH,IAAI;IAAEI,KAAK;IAAEC;EAAU,CAAC,GAAGd,MAAM,CACvCG,WAAW,IAAI,CAAC,mBAAmB,EAAEA,WAAW,CAAC,EACjDF,mBACF,CAAC;EAED,OAAO;IACLQ,IAAI;IACJK,SAAS;IACTD;EACF,CAAC;AACH;AAACD,EAAA,CAXuBD,eAAe;EAAA,QACFX,MAAM;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}