{"ast":null,"code":"var _jsxFileName = \"/home/dci-student/Desktop/Jest_Sample/codesplain/src/components/editor/ExplanationList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport ExplanationPanel from './ExplanationPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExplanationList({\n  editorRef,\n  selections,\n  onExplanationClose\n}) {\n  _s();\n  const [widgets, setWidgets] = useState([]);\n  useEffect(() => {\n    const updateWidgets = widgets => {\n      widgets.filter(w => !selections.find(s => s.line === w.line)).forEach(w => {\n        editorRef.current.removeContentWidget(w);\n      });\n      const updatedWidgets = selections.map(explanation => {\n        const existingWidget = widgets.find(w => w.line === explanation.line);\n        if (existingWidget) {\n          return existingWidget;\n        }\n        const widget = buildWidget(explanation, editorRef);\n        editorRef.current.addContentWidget(widget);\n        return widget;\n      });\n      return updatedWidgets.filter(w => selections.find(s => s.line === w.line));\n    };\n    setWidgets(updateWidgets);\n  }, [selections, editorRef]);\n  const renderedZones = widgets.map(widget => {\n    if (widget.domNode && widget.domNode.nodeType === 1) {\n      return /*#__PURE__*/createPortal(/*#__PURE__*/_jsxDEV(ExplanationPanel, {\n        selection: widget,\n        onClose: onExplanationClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), widget.domNode);\n    }\n    return null;\n  });\n  return renderedZones;\n}\n_s(ExplanationList, \"xR/xeBgu75B4310S8tsmAeb9Yf0=\");\n_c = ExplanationList;\nfunction buildWidget(selection) {\n  return {\n    ...selection,\n    domNode: null,\n    getId: function () {\n      return `explanation-${selection.line}`;\n    },\n    getDomNode: function () {\n      if (!this.domNode) {\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('z-50');\n      }\n      return this.domNode;\n    },\n    getPosition: function () {\n      return {\n        position: {\n          lineNumber: selection.line,\n          column: 0\n        },\n        preference: [2]\n      };\n    }\n  };\n}\nexport default ExplanationList;\nvar _c;\n$RefreshReg$(_c, \"ExplanationList\");","map":{"version":3,"names":["useState","useEffect","createPortal","ExplanationPanel","jsxDEV","_jsxDEV","ExplanationList","editorRef","selections","onExplanationClose","_s","widgets","setWidgets","updateWidgets","filter","w","find","s","line","forEach","current","removeContentWidget","updatedWidgets","map","explanation","existingWidget","widget","buildWidget","addContentWidget","renderedZones","domNode","nodeType","selection","onClose","fileName","_jsxFileName","lineNumber","columnNumber","_c","getId","getDomNode","document","createElement","classList","add","getPosition","position","column","preference","$RefreshReg$"],"sources":["/home/dci-student/Desktop/Jest_Sample/codesplain/src/components/editor/ExplanationList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport ExplanationPanel from './ExplanationPopup';\n\nfunction ExplanationList({ editorRef, selections, onExplanationClose }) {\n  const [widgets, setWidgets] = useState([]);\n\n  useEffect(() => {\n    const updateWidgets = (widgets) => {\n      widgets\n        .filter((w) => !selections.find((s) => s.line === w.line))\n        .forEach((w) => {\n          editorRef.current.removeContentWidget(w);\n        });\n\n      const updatedWidgets = selections.map((explanation) => {\n        const existingWidget = widgets.find((w) => w.line === explanation.line);\n        if (existingWidget) {\n          return existingWidget;\n        }\n        const widget = buildWidget(explanation, editorRef);\n        editorRef.current.addContentWidget(widget);\n        return widget;\n      });\n\n      return updatedWidgets.filter((w) =>\n        selections.find((s) => s.line === w.line)\n      );\n    };\n    setWidgets(updateWidgets);\n  }, [selections, editorRef]);\n\n  const renderedZones = widgets.map((widget) => {\n    if (widget.domNode && widget.domNode.nodeType === 1) {\n      return createPortal(\n        <ExplanationPanel selection={widget} onClose={onExplanationClose} />,\n        widget.domNode\n      );\n    }\n    return null;\n  });\n\n  return renderedZones;\n}\n\nfunction buildWidget(selection) {\n  return {\n    ...selection,\n    domNode: null,\n    getId: function () {\n      return `explanation-${selection.line}`;\n    },\n    getDomNode: function () {\n      if (!this.domNode) {\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('z-50');\n      }\n      return this.domNode;\n    },\n    getPosition: function () {\n      return {\n        position: {\n          lineNumber: selection.line,\n          column: 0,\n        },\n        preference: [2],\n      };\n    },\n  };\n}\n\nexport default ExplanationList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}